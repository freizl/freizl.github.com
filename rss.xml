<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Haisheng's Blogs RSS feed.</title>
        <link>http://haisgwu.info</link>
        <description><![CDATA[Haisheng's Home.]]></description>
        <atom:link href="http://haisgwu.info/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Wed, 25 May 2011 00:00:00 UT</lastBuildDate>
        <item>
    <title>A new blog and Hakyll</title>
    <link>http://haisgwu.info/posts/haskell/2011-05-25-hakyll-and-a-new-blog.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>A new blog and Hakyll</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on May 25, 2011</em>, Tags: <a href="../../tags/hakyll.html">hakyll</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>

<p>This is my first post on my new blog which is generated using Hakyll package<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup> and stolen ideas from its samples and this guy<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> and this guy<sup><a href="#fn3" class="footnoteRef" id="fnref3">3</a></sup></p>
<p>Hopefully I will study more about Haskell and blogging about them.</p>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://jaspervdj.be/hakyll/">Hakyll package</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="http://chrisdone.com/">Chrisdone’s home page</a><a href="#fnref2">↩</a></p></li>
<li id="fn3"><p><a href="http://jaspervdj.be/">Jaspervd home page</a><a href="#fnref3">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Wed, 25 May 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-05-25-hakyll-and-a-new-blog.html</guid>
</item>
<item>
    <title>A really trivial monad</title>
    <link>http://haisgwu.info/posts/haskell/2011-05-29-a-really-trivial-monad.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>A really trivial monad</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on May 29, 2011</em>, Tags: <a href="../../tags/monad.html">monad</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>

<p>Generally some people saying that Monad is a computation that take a ‘world’ as parameter and produce a result along with modified ‘world’. And this a manner that doing inpure in a pure language.</p>
<p>While thinking in terms of Parser, it means taking a String and produce a result along with the rest of the string which is not parsed<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup>. Consequently, we think a monadic type in Haskell is just a function.</p>
<p>It probably is at most of time but not have to be. For instance the <code>Maybe</code> type. The trial mentioned below is a little similar with <code>Maybe</code>.</p>
<p>Actually I would to play with such idea:</p>
<blockquote>
<p>To add a count of operations performed to it</p>
</blockquote>
<p>Therefore the type is actually any value plus a count</p>
<pre><code>&gt; newtype Sint a = Sint (a, Count)</code></pre>
<p>In order to be a monad, it has to be a instance of <code>Monad</code> and the implementation of <code>&gt;&gt;=</code> is</p>
<pre><code>&gt; p &gt;&gt;= f = let (a, c1) = getSint p
&gt;               (b, c2) = getSint (f a)
&gt;               in Sint (b, c1+c2)</code></pre>
<p>It means keep the result of the second computation and combinate the count together. Find full code <a href="../../codes/SideEffectInc.lhs"><code>here</code></a></p>
<p>Now, I realiaze that to implement a Monadic Type, two key points we need to do, which also turn to be simple.</p>
<ul>
<li>Define a type that carry along the ‘side effect’</li>
<li>Implement Monad class, a.k.a the <code>&gt;&gt;=</code> and <code>return</code> function<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup></li>
</ul>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://ecn.channel9.msdn.com/o9/ch9/1/1/2/4/0/5/C9LecturesMeijerC8_2MB_ch9.wmv">Functional parsers by Erik Meijer</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="http://channel9.msdn.com/shows/Going+Deep/Brian-Beckman-Dont-fear-the-Monads/">Brian Beckman: Don’t fear the Monad</a><a href="#fnref2">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sun, 29 May 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-05-29-a-really-trivial-monad.html</guid>
</item>
<item>
    <title>Exercise 3.10 of Yet another Haskell tutorial</title>
    <link>http://haisgwu.info/posts/haskell/2011-06-04-exe-3.10-YAHT.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Exercise 3.10 of Yet another Haskell tutorial</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on June  4, 2011</em>, Tags: <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>

<p>The exercise asks writing a program that will repeatedly ask the user for numbers until she types in zero, at which point it will tell her the sum of all the numbers, the product of all the numbers, and, for each number, its factorial.</p>
<p>In the solution, I practice a idea that Monad is lazy as well. In other words, here, could generate a list of Monads then print out to console.</p>
<pre><code>&gt; main = do  
&gt;     xs &lt;- sgetline  
&gt;     mapM_ (\s -&gt; putStrLn s) (showSum xs : showProduct xs : (map showFactorial xs))
&gt;   where   
&gt;     showSum xs = &quot;The sum is: &quot; ++ (show . sum) xs
&gt;     showProduct xs = &quot;The product is: &quot; ++ (show . product) xs
&gt;     showFactorial xs = (show x) ++ &quot; factorial is: &quot; ++ (show . factorial) xs
&gt;       
&gt; sgetline :: IO [Int]  
&gt; sgetline = do  
&gt;     putStrLn &quot;Give me a number (or 0 to stop) :&quot;
&gt;     x &lt;- getLine 
&gt;     if x `elem` [&quot;&quot;, &quot;0&quot;] then -- isStringEmpty?? 
&gt;       do return [] 
&gt;       else  
&gt;       do xs &lt;- sgetline  
&gt;          return ((read x):xs)  
&gt;   
&gt; factorial n = product [1..n]</code></pre>
<p>Full code <a href="../../codes/yaht-3.10.lhs"><code>here</code></a>.</p>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sat, 04 Jun 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-06-04-exe-3.10-YAHT.html</guid>
</item>
<item>
    <title>Understand foldr operator</title>
    <link>http://haisgwu.info/posts/haskell/2011-06-04-understand-foldr-operator.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Understand foldr operator</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on June  4, 2011</em>, Tags: <a href="../../tags/fold.html">fold</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#descrption-by-erik">Descrption by Erik</a></li>
<li><a href="#definition-by-graham">Definition by Graham</a></li>
<li><a href="#in-one-sentence">In one sentence</a></li>
</ul>
<p>I can not quite remember the usage of foldr until I finish the video by Erik Meijer on <Programming in Haskell> Chapter 7<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup>.</p>
<h1 id="descrption-by-erik"><a href="#TOC">Descrption by Erik</a></h1>
<p>Erik describe <code>foldr</code> in a very comprehensive way.</p>
<p>Take refining the <code>length</code> function in terms of <code>foldr</code> as a example. <code>length</code> has a definition as</p>
<pre><code>&gt; length  :: [a] -&gt; Int
&gt; length []  = 0
&gt; length (x:xs)   = 1 + length xs</code></pre>
<p>and</p>
<pre><code>  length [1,2,3]
= length (1:(2:(3:[])))
= 1 + (1 + (1  + 0))
= 3</code></pre>
<p>By replace each (:) by <code>\ _ n -&gt; 1 + n</code> and [] by 0, we have:</p>
<pre><code>&gt; length = foldr (\ _ n -&gt; 1 + n) 0</code></pre>
<h1 id="definition-by-graham"><a href="#TOC">Definition by Graham</a></h1>
<p>Having such knowledge inside, I find Graham’s tutorial paper<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> about fold again. There is a concise decription of what fold is:</p>
<blockquote>
<p>The function <em>fold f v</em> processes a list of type <em>[a]</em> to give a value of type <em>b</em> by replacing the <em>nil</em> constructor [] at the end of the list by the value <em>v</em>, and each cons constructor (:) within the list by the function <em>f</em>.</p>
</blockquote>
<p>In Haskell, the <em>fold</em> operator can be defined as follows:</p>
<pre><code>fold  :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b
fold f v [] = v
fold f v (x:xs) = f x (fold f v xs)</code></pre>
<h1 id="in-one-sentence"><a href="#TOC">In one sentence</a></h1>
<p>Thought it might not be that precisely.</p>
<pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code></pre>
<blockquote>
<p>Pull element one by one from right side of the list and apply the callback</p>
</blockquote>
<pre><code>foldl :: (a -&gt; b -&gt; a) -&gt; a -&gt; [b] -&gt; a </code></pre>
<blockquote>
<p>Basically, pull element one by one from left side of the list and apply the callback</p>
</blockquote>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://www.cs.nott.ac.uk/~gmh/book.html">Programming in Haskell</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="www.cs.nott.ac.uk/~gmh/fold.pdf">Tutorial on the universality and expressions of fold</a><a href="#fnref2">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sat, 04 Jun 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-06-04-understand-foldr-operator.html</guid>
</item>
<item>
    <title>Deriving in Haskell</title>
    <link>http://haisgwu.info/posts/haskell/2011-06-14-deriving.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Deriving in Haskell</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on June 14, 2011</em>, Tags: <a href="../../tags/typeclass.html">typeclass</a>, <a href="../../tags/deriving.html">deriving</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#deriving">Deriving</a></li>
<li><a href="#further-study">Further study</a></li>
<li><a href="#reference">Reference</a></li>
</ul>
<h1 id="deriving"><a href="#TOC">Deriving</a></h1>
<p>What the cool thing that Deriving does is actually <strong>automaticlly implementing instance</strong> for perticular type class.</p>
<p>For instance, a <code>Person</code> derives <code>Eq</code></p>
<pre><code>data Person = Person { firstName :: String, 
                       lastName  :: String, 
                       age       :: Int }
                     deriving (Eq)</code></pre>
<p>Then we are able to compare two Persons because Haskell make the type <code>Person</code> to be a instance of typeclass <code>Eq</code>.</p>
<p>Take another example,</p>
<pre><code>data Day = Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | Sunday
           deriving (Bounded, Enum)</code></pre>
<p>The <code>Bounded</code> typeclass defines things that have lowest possible value and highest possible value. The <code>Enum</code> typeclass defines things that have predecessors and successors.</p>
<p>Let’s read one of function in <code>Bounded</code> typeclass <code>minBound</code>, which just return something that is instance of <code>Bounded</code>.</p>
<pre><code>minBound :: (Bounded a) =&gt; a</code></pre>
<p>Hence, if enforce its return type to be <code>Day</code>, we will get result</p>
<pre><code>ghci&gt; minBound :: Day  
Monday </code></pre>
<p>Take a look at one function of <code>Enum</code> typeclass</p>
<pre><code>succ :: (Enum a) =&gt; a -&gt; a</code></pre>
<p>We could easy guess the result of <code>succ Tuesday</code> will be Wednesday.</p>
<h1 id="further-study"><a href="#TOC">Further study</a></h1>
<ul>
<li>How does the Deriving being implemented in Haskell?</li>
</ul>
<p>Thanks a guy point me I could go further by study <a href="http://hackage.haskell.org/package/derive">Data.derive</a> at the beginner mailing session.</p>
<h1 id="reference"><a href="#TOC">Reference</a></h1>
<ul>
<li><a href="http://learnyouahaskell.com/making-our-own-types-and-typeclasses">Learn Your Haskell, Chapter 8</a></li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Tue, 14 Jun 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-06-14-deriving.html</guid>
</item>
<item>
    <title>How to read mapM</title>
    <link>http://haisgwu.info/posts/haskell/2011-06-14-mapM.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>How to read mapM</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on June 14, 2011</em>, Tags: <a href="../../tags/monad.html">monad</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#how-to-understand-the-following-computation-result">How to understand the following computation result?</a></li>
<li><a href="#reason-about">‘Reason about’</a></li>
</ul>
<h3 id="how-to-understand-the-following-computation-result"><a href="#TOC">How to understand the following computation result?</a></h3>
<pre><code>Prelude&gt; mapM id [Just 1, Nothing, Just 3]
Nothing</code></pre>
<h3 id="reason-about"><a href="#TOC">‘Reason about’</a></h3>
<pre><code>mapM     :: (a -&gt; m b) -&gt; [a] -&gt; m [b]
id       :: a -&gt; a
sequence :: (Monad m) =&gt; [m a] -&gt; m [a]</code></pre>
<p>Therefore,</p>
<pre><code>&gt; a = Maybe Int
&gt; m = Maybe
&gt; b = Int</code></pre>
<p>the mapM and sequence is implemented like this:</p>
<pre><code>mapM f xs = sequence (map f xs)

sequence (c:cs) = do x  &lt;- c
                     xs &lt;- sequence cs
                  return (x:xs)</code></pre>
<p>Hence the result could be understood in such way</p>
<pre><code>  mapM id [Just 1, Nothing, Just 3]
= sequence (map id [Just 1, Nothing, Just 3])
= sequence [Just 1, Nothing, Just 3]
= do { x &lt;- Just 1; xs &lt;- sequence [Nothing, Just 3]; return (x:xs) }
= ...
= Just 1 &gt;&gt;= \x -&gt; Nothing &gt;&gt;= \y -&gt; Just 3 &gt;&gt;= \z -&gt; return (x:y:z)
= Nothing          -- Because Nothing &gt;&gt;= ... produce Nothing</code></pre>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Tue, 14 Jun 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-06-14-mapM.html</guid>
</item>
<item>
    <title>Max size file in desired directory</title>
    <link>http://haisgwu.info/posts/haskell/2011-06-21-max-file-size.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Max size file in desired directory</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on June 21, 2011</em>, Tags: <a href="../../tags/monad.html">monad</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>

<p>While doing some refactoring work on solution from this guy<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup>, I realized a pretty trivial thing about Manod method <code>&gt;&gt;=</code>.</p>
<p>Take a look at its definition:</p>
<pre><code>Prelude&gt; :t (&gt;&gt;=)
(&gt;&gt;=) :: (Monad m) =&gt; m a -&gt; (a -&gt; m b) -&gt; m b</code></pre>
<p>Both <code>a</code> and <code>b</code> ought to be some Monadic type! In other words, all computation glued together by <code>&gt;&gt;=</code> have same Manodic type.</p>
<p>It is really straightforward however I did not have that in mind.</p>
<p>Since I did want to define a function take a <code>String</code> and return a list of <code>String</code> while its implementation has several computations that return IO type. Obviously the function failed to compiled. Therefore I changed it to return <code>IO [String]</code>.</p>
<pre><code>-- FilePath is from package System.IO and it is synonyms of String
getFilesInDir :: FilePath -&gt; IO [FilePath]
getFilesInDir inp = do 
  isDir &lt;- doesDirectoryExist inp
  files &lt;- if isDir then
              (do
               names &lt;- getDirectoryContents inp
               forM [ inp &lt;/&gt; x | x &lt;- names, isNotSpecialDir x ] getFilesInDir)
           else return [[inp]]              
  return $ concat files</code></pre>
<p>PS:</p>
<ul>
<li>Full source code here<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> or hpaste<sup><a href="#fn3" class="footnoteRef" id="fnref3">3</a></sup> which is cool as give me several suggestions.</li>
<li>I think hpaste using hlint to do code analysis and provide suggestions</li>
<li>Actually it is possible to have multiple Monad in one <code>do</code> levarage Monad Transformers.</li>
</ul>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://www.never-ending.me/blog/2011/06/16/276/">Never ending</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="https://github.com/freizl/dive-into-haskell/blob/master/io/MaxSizeFile.hs">MaxSizeFile.hs</a><a href="#fnref2">↩</a></p></li>
<li id="fn3"><p><a href="http://hpaste.org/47969">hpaset</a><a href="#fnref3">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Tue, 21 Jun 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-06-21-max-file-size.html</guid>
</item>
<item>
    <title>Type parameter at type class instance</title>
    <link>http://haisgwu.info/posts/haskell/2011-07-02-type-parameter-at-typeclass-instance.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Type parameter at type class instance</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on July  2, 2011</em>, Tags: <a href="../../tags/typeclass.html">typeclass</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#a-newbie-concern">A newbie concern</a></li>
<li><a href="#another-interesting-funtor">Another interesting Funtor</a></li>
<li><a href="#further-reading">Further reading</a></li>
</ul>
<h1 id="a-newbie-concern"><a href="#TOC">A newbie concern</a></h1>
<p>A concern arise while I compare following two instances of <code>Maybe</code>.</p>
<pre><code>class Eq a where  
    (==) :: a -&gt; a -&gt; Bool  
    (/=) :: a -&gt; a -&gt; Bool 

class Functor f where
    fmap :: (a -&gt; b) -&gt; f a -&gt; f b

instance (Eq a) =&gt; Eq (Maybe a) where
    Just x == Just y = x == y  
    Nothing == Nothing = True  
    _ == _ = False  

instance Functor Maybe where
    fmap f (Just x) = Just (f x)  
    fmap f Nothing = Nothing 
</code></pre>
<p>It put <code>Maybe</code> as type parameter while instance <code>Functor</code> class. By contract, it is <code>Maybe a</code> while at <code>Eq</code> case.</p>
<p>Why?</p>
<p>A answer from Haskell beginner seems comprehensive but I did not understand completely. And I re-read chapters related to type from LYGH<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup> and found several useful explanations.</p>
<p>For instance <code>Maybe</code> of <code>Eq</code>, it reads</p>
<blockquote>
<p>the a has to be a concrete type but Maybe isn’t a concrete type. It’s a type constructor that takes one parameter and then produces a concrete type. It would also be tedious to write instance Eq (Maybe Int) where, instance Eq (Maybe Char) where, etc. for every type ever. So we could write it out like so: (Eq a) =&gt; Eq (Maybe a)</p>
</blockquote>
<p>For instance <code>Maybe</code> of <code>Functor</code>, it reads</p>
<blockquote>
<p>If we want to make a type constructor an instance of Functor, it has to have a kind of * -&gt; *, which means that it has to take exactly one concrete type as a type parameter. For example, Maybe can be made an instance because it takes one type parameter to produce a concrete type, like Maybe Int or Maybe String. If a type constructor takes two parameters, like Either, we have to partially apply the type constructor until it only takes one type parameter. So we can’t write instance Functor Either where, but we can write instance Functor (Either a) where and then if we imagine that fmap is only for Either a, it would have a type declaration of fmap :: (b -&gt; c) -&gt; Either a b -&gt; Either a c. As you can see, the Either a part is fixed, because Either a takes only one type parameter, whereas just Either takes two so fmap :: (b -&gt; c) -&gt; Either b -&gt; Either c wouldn’t really make sense.</p>
</blockquote>
<p>My understanding comes:</p>
<p>parameter <code>f a</code> of <code>fmap</code> should be concrete type, therefore <code>f</code> is a Type Constructor which takes one type parameter in order to construct concrete type. That is the reason the quote says <em>it has to have a kind of</em> <code>* -&gt; *</code>.</p>
<h1 id="another-interesting-funtor"><a href="#TOC">Another interesting Funtor</a></h1>
<p>It is <code>(-&gt;) r</code> which was confusing at first glance. However, if we read it having Polish notation<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> in mind, it looks like less confusing.</p>
<pre><code>instance Functor ((-&gt;) r) where  
    fmap f g = (\x -&gt; f (g x))</code></pre>
<p>Quiz: what does following expression produce?</p>
<blockquote>
<p>fmap (*3) (+100) 1</p>
</blockquote>
<h1 id="further-reading"><a href="#TOC">Further reading</a></h1>
<p>I got to read paper at type class topic<sup><a href="#fn3" class="footnoteRef" id="fnref3">3</a></sup> in order to have more knowledge.</p>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://learnyouahaskell.com">Learn Your Good Haskell</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="http://en.wikipedia.org/wiki/Polish_notation">Polish notation</a><a href="#fnref2">↩</a></p></li>
<li id="fn3"><p><a href="http://en.wikipedia.org/wiki/Type_class">Wikipedia Type Class</a><a href="#fnref3">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sat, 02 Jul 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-07-02-type-parameter-at-typeclass-instance.html</guid>
</item>
<item>
    <title>One solution to euler problem 12</title>
    <link>http://haisgwu.info/posts/haskell/2011-11-18-one-solution-to-euler-12.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>One solution to euler problem 12</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on November 18, 2011</em>, Tags: <a href="../../tags/euler.html">euler</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>

<p>Nothing special but play haskell for fun.</p>
<p><code>Priming</code> is a simple module which can be found at <sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup></p>
<pre><code>module Main where

import Data.List
import Primeing (primeFactors)

main :: IO ()
main = print $ p12 500

p12 :: Int -&gt; Int
p12 n = head $ filter (factorLimit n) [ smartGaus x | x &lt;- [1..]]

smartGaus :: Int -&gt; Int
smartGaus n = (1+n)*n `div` 2

{-- |
  Is factor count under the limit  
--}
factorLimit :: Int -&gt; Int -&gt; Bool
factorLimit l n  
  | 2 * sqrtInt n &lt; l    = False
  | otherwise            = length (factors  n) &gt;= l


factors :: Int -&gt; [Int]
factors n = concat [ [x, n `div` x] | x &lt;- [1..sqrtInt n], n `mod` x == 0 ]

sqrtInt :: Int -&gt; Int
sqrtInt = truncate . sqrt . fromIntegral</code></pre>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="https://github.com/freizl/dive-into-haskell/tree/master/prime">Priming module</a><a href="#fnref1">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 18 Nov 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-11-18-one-solution-to-euler-12.html</guid>
</item>
<item>
    <title>Solving Euler Problem 14</title>
    <link>http://haisgwu.info/posts/haskell/2011-11-20-euler-problem-14.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Solving Euler Problem 14</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on November 20, 2011</em>, Tags: <a href="../../tags/euler.html">euler</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#solution-one">Solution One</a></li>
<li><a href="#solution-two">Solution Two</a></li>
<li><a href="#other-solutions">Other solutions</a></li>
<li><a href="#further">Further</a><ul>
<li><a href="#why-solution-2-make-great-differences"><strong>Why solution 2 make great differences?</strong></a></li>
<li><a href="#more-about-parallel-programming-in-haskell">More about Parallel programming in Haskell?</a></li>
</ul></li>
</ul>
<h2 id="solution-one"><a href="#TOC">Solution One</a></h2>
<p>I should say this solution only work while upper limit is under 100000. Otherwise it is really slow and I have no patient for the result. I wonder it would take minutes or even hours.</p>
<p>So, problem solving failed.</p>
<pre><code>module Main where
import Data.Word

main :: IO ()
main = print $ p14

p14 = maximum [ (startChain n 0, n) | n &lt;- [2..1000000] ]

startChain :: Int -&gt; Int -&gt; Int
startChain 1 count    = count + 1
startChain n count    = startChain (intTransform n) (count+1)

intTransform :: Int -&gt; Int
intTransform n
  | even n         = n `div` 2 
  | otherwise      = 3 * n + 1 
</code></pre>
<p>Compile as otherwise Stack space overflow : <code>ghc --make p14-1.hs -O2 -fforce-recomp -rtsopts</code></p>
<h2 id="solution-two"><a href="#TOC">Solution Two</a></h2>
<p>I went for Haskell Wiki<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup> for help by finding solution one there is similar to one of its solutions. The significate difference is it uses type <code>Word32</code> for <code>n</code> rather than <code>Int</code>. I picked this difference and make the following change and it worked out really cool.</p>
<p>The result came under 1.5s at my local!</p>
<pre><code>
startChain :: Word32 -&gt; Int -&gt; Int
startChain 1 count    = count + 1
startChain n count    = startChain (intTransform n) (count+1)

intTransform :: Word32 -&gt; Word32
intTransform n
  | even n         = n `div` 2 
  | otherwise      = 3 * n + 1 
</code></pre>
<p>Compile as otherwise Stack space overflow : <code>ghc --make p14-1.hs -O2 -fforce-recomp -rtsopts</code></p>
<h2 id="other-solutions"><a href="#TOC">Other solutions</a></h2>
<p>Haskell Wiki<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> presents several solutions. One interested me is that levearages parallel programming <code>Control.Parallel</code>.</p>
<h2 id="further"><a href="#TOC">Further</a></h2>
<h3 id="why-solution-2-make-great-differences"><a href="#TOC"><strong>Why solution 2 make great differences?</strong></a></h3>
<p>I asked question in haskell-beginer but still can not get clear understanding.</p>
<h3 id="more-about-parallel-programming-in-haskell"><a href="#TOC">More about Parallel programming in Haskell?</a></h3>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://www.haskell.org/haskellwiki/Euler_problems/11_to_20">Haskell Wiki Euler Problem</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="http://www.haskell.org/haskellwiki/Euler_problems/11_to_20">Haskell Wiki Euler Problem</a><a href="#fnref2">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sun, 20 Nov 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-11-20-euler-problem-14.html</guid>
</item>
<item>
    <title>Lesson learned from Euler Problem 104</title>
    <link>http://haisgwu.info/posts/haskell/2011-12-15-euler-problem-104.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Lesson learned from Euler Problem 104</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on December 15, 2011</em>, Tags: <a href="../../tags/euler.html">euler</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#solutions">Solutions</a></li>
<li><a href="#why-the-differences">Why the differences?</a></li>
<li><a href="#profiling">Profiling</a></li>
<li><a href="#further">Further</a></li>
</ul>
<h2 id="solutions"><a href="#TOC">Solutions</a></h2>
<p>There are two solutions below. One is written by me and another from haskell wiki.</p>
<p>They look quite similar and I can not figure out why the wiki solution can solve problem but not mine. (Actually mine take more than 15 minutes)</p>
<ul>
<li>My Solution</li>
</ul>
<table class="sourceCode haskell numberLines"><tr class="sourceCode"><td class="lineNumbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="sourceCode"><pre><code class="sourceCode haskell">main <span class="fu">=</span> <span class="fu">print</span> <span class="fu">$</span> <span class="fu">snd</span> <span class="fu">$</span> <span class="fu">head</span> <span class="fu">$</span> 
       <span class="fu">dropWhile</span> (\ (x,y) <span class="ot">-&gt;</span> (<span class="fu">not</span> <span class="fu">.</span> isLastNinePandigit <span class="st">&quot;123456789&quot;</span>) x)
                 (<span class="fu">zip</span> fibs [<span class="dv">1</span><span class="fu">..</span>])

bothNinePandigit digits n <span class="fu">=</span>  isFirstNinePandigit digits n 
                             <span class="fu">&amp;&amp;</span> isLastNinePandigit digits n

isLastNinePandigit  digits <span class="fu">=</span> (<span class="fu">==</span> digits) <span class="fu">.</span> <span class="fu">sort</span> <span class="fu">.</span> lastDigits <span class="dv">9</span> 
isFirstNinePandigit digits <span class="fu">=</span> (<span class="fu">==</span> digits) <span class="fu">.</span> <span class="fu">sort</span> <span class="fu">.</span> firstDigits <span class="dv">9</span> 

firstDigits k n <span class="fu">=</span> <span class="fu">take</span> k (<span class="fu">show</span> n)
lastDigits  k n <span class="fu">=</span> <span class="fu">show</span> (n <span class="ot">`mod`</span> <span class="dv">10</span><span class="fu">^</span>k)</code></pre></td></tr></table>
<ul>
<li>Haskell Wiki solution<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup></li>
</ul>
<table class="sourceCode haskell numberLines"><tr class="sourceCode"><td class="lineNumbers"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="sourceCode"><pre><code class="sourceCode haskell">
fibs <span class="fu">=</span> <span class="dv">1</span> <span class="fu">:</span> <span class="dv">1</span> <span class="fu">:</span> <span class="fu">zipWith</span> (<span class="fu">+</span>) fibs (<span class="fu">tail</span> fibs)

isFibPan n <span class="fu">=</span>
  <span class="kw">let</span> a <span class="fu">=</span> n <span class="ot">`mod`</span> <span class="dv">1000000000</span>
      b <span class="fu">=</span> <span class="fu">sort</span> (<span class="fu">show</span> a)
      c <span class="fu">=</span> <span class="fu">sort</span> <span class="fu">$</span> <span class="fu">take</span> <span class="dv">9</span> <span class="fu">$</span> <span class="fu">show</span> n
  <span class="kw">in</span>  b <span class="fu">==</span> <span class="st">&quot;123456789&quot;</span> <span class="fu">&amp;&amp;</span> c <span class="fu">==</span> <span class="st">&quot;123456789&quot;</span>

ex_104 <span class="fu">=</span> <span class="fu">snd</span> <span class="fu">$</span> <span class="fu">head</span> <span class="fu">$</span> 
         <span class="fu">dropWhile</span> (\(x,y) <span class="ot">-&gt;</span> (<span class="fu">not</span> <span class="fu">.</span> isFibPan) x) (<span class="fu">zip</span> fibs [<span class="dv">1</span><span class="fu">..</span>])</code></pre></td></tr></table>
<h2 id="why-the-differences"><a href="#TOC">Why the differences?</a></h2>
<p>The key point here is should test start nine digits first or test end nine digits.</p>
<p>Two concerns here:</p>
<ol style="list-style-type: decimal">
<li><code>show</code> function is (relatively) slow which used in test first 9 digits function.</li>
<li>quite few numbers are end in digits 1..9 in the first 329000 numbers</li>
</ol>
<p>Therefore test last 9 digits first make great performance improvement.</p>
<p><em>Thanks Brent<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> explanation this sneaky thing very comprehensively in haskell-beginner.</em></p>
<h2 id="profiling"><a href="#TOC">Profiling</a></h2>
<p>What help to identify is the GHC profiling tool.</p>
<p>Several options used here are</p>
<ul>
<li><p><strong>prof</strong>: for basic time and allocation profiling</p></li>
<li><p><strong>auto-all</strong>: auto insert cost centers on all top level functions. “cost center” is a location in the program like to collect statistics about and GHC will generate code to compute the cost of evalutating the expression at each location. e.g.</p></li>
</ul>
<pre><code>  mean  s = {-# SCC &quot;mean&quot; #-} sum  s / fromIntegral (length s)</code></pre>
<ul>
<li><p><strong>caf-all</strong>: function with no parameters only computed once. CAF means constant applicative forms which used for calculate that once time evaluation.</p></li>
<li><p><strong>fforce-recomp</strong>: force full recompilation.</p></li>
</ul>
<p>More details could go to chapter 25<sup><a href="#fn3" class="footnoteRef" id="fnref3">3</a></sup> of <Real World Haskell> and GHC user guider chapter 5<sup><a href="#fn4" class="footnoteRef" id="fnref4">4</a></sup>.</p>
<pre><code># build with prof option on
ghc --make -O2 -prof -auto-all -rtsopts p104.hs

# then run
./p104 +RTS -p -RTS</code></pre>
<h2 id="further"><a href="#TOC">Further</a></h2>
<ol style="list-style-type: decimal">
<li>Chapter 25 in Real Work Haskell about profile</li>
</ol>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://www.haskell.org/haskellwiki/Euler_problems/100_to_110">Haskell Wiki Euler Problem</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="http://comments.gmane.org/gmane.comp.lang.haskell.beginners/9175">Haskell Beginner 9175</a><a href="#fnref2">↩</a></p></li>
<li id="fn3"><p><a href="http://book.realworldhaskell.org/read/profiling-and-optimization.html">Profiling and optimization</a><a href="#fnref3">↩</a></p></li>
<li id="fn4"><p><a href="http://www.haskell.org/ghc/docs/latest/html/users_guide/profiling.html">GHC User Guider</a><a href="#fnref4">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Thu, 15 Dec 2011 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2011-12-15-euler-problem-104.html</guid>
</item>
<item>
    <title>"Magic" Monad Transformer</title>
    <link>http://haisgwu.info/posts/haskell/2012-04-07-magic-monad-transformer.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>&quot;Magic&quot; Monad Transformer</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  7, 2012</em>, Tags: <a href="../../tags/monad.html">monad</a>, <a href="../../tags/mtl.html">mtl</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#monad-transformer">Monad-Transformer</a></li>
<li><a href="#what-is-the-so-called-magic">What is the so-called “Magic”</a></li>
<li><a href="#a-trivial-demo">A trivial demo</a></li>
</ul>
<h2 id="monad-transformer"><a href="#TOC">Monad-Transformer</a></h2>
<p>The code fragment below is from chapter 18 Monad Transform of &lt;Real World Haskell&gt;<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup>.</p>
<p>When the first time I read this example, I was confused with how it is possible to use <code>ask</code> of <code>MonadReader</code> (line 6) and <code>get</code> of <code>MonadState</code> (line 13) functions in the same <code>App</code> Monad content.</p>
<p>The only reasonable explanation is that <code>App</code> is both <code>MonadReader</code> and <code>MonadState</code>. While looking at <code>App</code> type definition (line 1), seems it is not possible.</p>
<table class="sourceCode haskell numberLines"><tr class="sourceCode"><td class="lineNumbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="sourceCode"><pre><code class="sourceCode haskell"><span class="kw">type</span> <span class="dt">App</span> <span class="fu">=</span> <span class="dt">ReaderT</span> <span class="dt">AppConfig</span> (<span class="dt">StateT</span> <span class="dt">AppState</span> <span class="dt">IO</span>)

<span class="ot">constrainedCount ::</span> <span class="dt">Int</span> <span class="ot">-&gt;</span> <span class="fu">FilePath</span> <span class="ot">-&gt;</span> <span class="dt">App</span> [(<span class="fu">FilePath</span>, <span class="dt">Int</span>)]
constrainedCount curDepth path <span class="fu">=</span> <span class="kw">do</span>
  contents <span class="ot">&lt;-</span> liftIO <span class="fu">.</span> listDirectory <span class="fu">$</span> path
  cfg <span class="ot">&lt;-</span> ask
  rest <span class="ot">&lt;-</span> forM contents <span class="fu">$</span> \name <span class="ot">-&gt;</span> <span class="kw">do</span>
            <span class="kw">let</span> newPath <span class="fu">=</span> path <span class="fu">&lt;/&gt;</span> name
            isDir <span class="ot">&lt;-</span> liftIO <span class="fu">$</span> doesDirectoryExist newPath
            <span class="kw">if</span> isDir <span class="fu">&amp;&amp;</span> curDepth <span class="fu">&lt;</span> cfgMaxDepth cfg
              <span class="kw">then</span> <span class="kw">do</span>
                <span class="kw">let</span> newDepth <span class="fu">=</span> curDepth <span class="fu">+</span> <span class="dv">1</span>
                st <span class="ot">&lt;-</span> get
                when (stDeepestReached st <span class="fu">&lt;</span> newDepth) <span class="fu">$</span>
                  put st { stDeepestReached <span class="fu">=</span> newDepth }
                constrainedCount newDepth newPath
              <span class="kw">else</span> <span class="fu">return</span> []
  <span class="fu">return</span> <span class="fu">$</span> (path, <span class="fu">length</span> contents) <span class="fu">:</span> <span class="fu">concat</span> rest</code></pre></td></tr></table>
<h2 id="what-is-the-so-called-magic"><a href="#TOC">What is the so-called “Magic”</a></h2>
<p>I turn to the source of package mtl<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> and finding following implementations.</p>
<table class="sourceCode haskell numberLines"><tr class="sourceCode"><td class="lineNumbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="sourceCode"><pre><code class="sourceCode haskell">
<span class="co">-- | ReaderT</span>
<span class="kw">instance</span> (<span class="kw">Monad</span> m) <span class="ot">=&gt;</span> <span class="dt">MonadReader</span> r (<span class="dt">ReaderT</span> r m) <span class="kw">where</span>
    ask <span class="fu">=</span> ReaderT.ask
    local <span class="fu">=</span> ReaderT.local

<span class="co">-- | StateT</span>
<span class="kw">instance</span> (<span class="kw">Monad</span> m) <span class="ot">=&gt;</span> <span class="dt">MonadState</span> s (<span class="dt">Lazy.StateT</span> s m) <span class="kw">where</span>
    get <span class="fu">=</span> Lazy.get
    put <span class="fu">=</span> Lazy.put

<span class="co">-- | Combine ReaderT and StataT</span>
<span class="kw">instance</span> (<span class="dt">MonadState</span> s m) <span class="ot">=&gt;</span> <span class="dt">MonadState</span> s (<span class="dt">ReaderT</span> r m) <span class="kw">where</span>
    get <span class="fu">=</span> lift get
    put <span class="fu">=</span> lift <span class="fu">.</span> put</code></pre></td></tr></table>
<p>If we do a substitution, will get</p>
<pre><code>1. instance MonadReader AppConfig App where ...

2. instance (MonadState AppState (StateT AppState IO) 
          =&gt; MonadState AppState (ReaderT AppConfig (StateT AppState IO)) where ...
   ~&gt; instance MonadState AppState App where ...</code></pre>
<p>Therefore <code>App</code> is both MonadReader and MonadState.</p>
<h2 id="a-trivial-demo"><a href="#TOC">A trivial demo</a></h2>
<p>I made a very trivial sample <sup><a href="#fn3" class="footnoteRef" id="fnref3">3</a></sup> demostrating combine ReaderT and StateT.</p>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://book.realworldhaskell.org/read/monad-transformers.html">Chapter 8 Monad Transformer</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="http://hackage.haskell.org/package/mtl-2.0.1.0">mtl-2.0.1.0 in hackage</a><a href="#fnref2">↩</a></p></li>
<li id="fn3"><p><a href="https://github.com/freizl/dive-into-haskell/blob/master/monad/hello-mtl.hs">A clear demo</a><a href="#fnref3">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sat, 07 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2012-04-07-magic-monad-transformer.html</guid>
</item>
<item>
    <title>Quotes: SoE DRAFT</title>
    <link>http://haisgwu.info/posts/haskell/2012-04-08-reading-SoE.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Quotes: SoE DRAFT</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  8, 2012</em>, Tags: <a href="../../tags/reading.html">reading</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#notes">Notes</a><ul>
<li><a href="#chapter-1">Chapter 1</a></li>
</ul></li>
</ul>
<h2 id="notes"><a href="#TOC">Notes</a></h2>
<h3 id="chapter-1"><a href="#TOC">Chapter 1</a></h3>
<ul>
<li>In Haskell, the objects that we perform calculations on are called <em>expressions</em>, and the objects that result from a calculation are called <em>values</em>. <br /> <strong>It is helpful to think of a value just as expression on which no more calculation can be carried out.</strong></li>
<li>You can think of types as set of expressions (or values) in which members of same set have much in common.</li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sun, 08 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2012-04-08-reading-SoE.html</guid>
</item>
<item>
    <title>Quotes: Haskell Tutorial DRAFT</title>
    <link>http://haisgwu.info/posts/haskell/2012-04-13-reading-haskell-tutorial.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Quotes: Haskell Tutorial DRAFT</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April 13, 2012</em>, Tags: <a href="../../tags/reading.html">reading</a>, <a href="../../tags/haskell.html">haskell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>

<ul>
<li>Page 23</li>
</ul>
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="kw">instance</span> (<span class="kw">Eq</span> a) <span class="ot">=&gt;</span> <span class="kw">Eq</span> (<span class="dt">Tree</span> a) <span class="kw">where</span>
  (<span class="dt">Leaf</span> x) <span class="fu">==</span> (<span class="dt">Leaf</span> y)  <span class="fu">=</span> x <span class="fu">==</span> y
  (<span class="dt">Branch</span> l r) <span class="fu">==</span> (<span class="dt">Branch</span> l' r') <span class="fu">=</span> l <span class="fu">==</span> l' <span class="fu">&amp;&amp;</span> r <span class="fu">==</span> r'
  _ <span class="fu">==</span> _ <span class="fu">=</span> <span class="kw">False</span>

<span class="kw">data</span> <span class="dt">Tree</span> a <span class="fu">=</span> <span class="dt">Leaf</span> a <span class="fu">|</span> <span class="dt">Branch</span> (<span class="dt">Tree</span> a) (<span class="dt">Tree</span> a) <span class="kw">deriving</span> <span class="kw">Eq</span></code></pre>
<ul>
<li>Polymorphic Type</li>
</ul>
<p><code>data Point a  = Point a a</code></p>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 13 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/haskell/2012-04-13-reading-haskell-tutorial.html</guid>
</item>
<item>
    <title>Quotes: A Century of Innovation - 3M</title>
    <link>http://haisgwu.info/posts/readings/2012-01-13-quotes-3M-a-story.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Quotes: A Century of Innovation - 3M</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on January 13, 2012</em>, Tags: <a href="../../tags/reading.html">reading</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#time-tested-truths">time-tested truths</a></li>
</ul>
<h3 id="time-tested-truths"><a href="#TOC">time-tested truths</a></h3>
<ul>
<li>Conceive, believe, achieve. Persistence—combined with creativity and faith—is still the best formula for long-term success.</li>
<li>Don’t let one approach or solution blind you to better options.</li>
<li>Struggle is a necessary component of success.</li>
<li>“Patient money” and patient people help the big ideas germinate.</li>
<li>Ask your customers what quality is—then never let the standard slip.</li>
<li>Give good people opportunities, supp ort them and watch them thrive.</li>
<li>Respect the “power of patents.”</li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 13 Jan 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/readings/2012-01-13-quotes-3M-a-story.html</guid>
</item>
<item>
    <title>Notes: Master of Regular Expression</title>
    <link>http://haisgwu.info/posts/readings/2012-04-08-notes-master-regexp.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Notes: Master of Regular Expression</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  8, 2012</em>, Tags: <a href="../../tags/reading.html">reading</a>, <a href="../../tags/regex.html">regex</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#notes">Notes</a></li>
<li><a href="#reference">Reference</a></li>
</ul>
<h2 id="notes"><a href="#TOC">Notes</a></h2>
<pre class="sourceCode perl"><code class="sourceCode perl">Matching <span class="kw">and</span> Capture, <span class="kw">or</span> just <span class="kw">not</span> Capture
(?:...) <span class="kw">and</span> (...)


<span class="kw">/</span><span class="ot">i has no effect on the replacement text</span>
<span class="ot">e.g.  </span><span class="dt">$var =~ s</span><span class="kw">/</span>\bJeff\b/Jeff/i;
compare difference with:
<span class="dt">$var</span> =~ <span class="kw">s/</span><span class="bn">\s</span><span class="ot">Jeff</span><span class="bn">\s</span><span class="kw">/</span><span class="st">Jeff</span><span class="kw">/i</span>;


Automated Editing
perl <span class="kw">-p</span> -i <span class="kw">-e</span> <span class="kw">'</span><span class="st">s/sysread/read/g</span><span class="kw">'</span> file


? What is <span class="kw">'</span><span class="st">m</span><span class="kw">'</span> modifier
<span class="dt">$text</span> =~ <span class="kw">s/</span><span class="ch">^$</span><span class="kw">/</span><span class="st">&lt;p&gt;</span><span class="kw">/mg</span>;</code></pre>
<pre class="sourceCode perl"><code class="sourceCode perl">Lookaround
  (?= ...) (?! ...) (?&lt;= ...) (?&lt;! ...)
  - lookaround does <span class="kw">not</span> consume text
  - (?=Jeffery)Jeff <span class="kw">&lt;P61&gt;</span>
  - (?&lt;=\bJeff)(?=<span class="kw">s\</span><span class="ot">b</span><span class="ch">)</span>


<span class="kw">\</span><span class="st">G &lt;P128&gt;</span>
<span class="st">  X? ...</span>

<span class="st">Comments and Mode modifiers &lt;P133&gt;</span>
<span class="st">  (?modifier) such as (?i), (?-i)</span>
<span class="st">  e.g. &lt;B&gt;(?i)very(?-i)&lt;/B&gt;</span>
<span class="st">       match: &lt;B&gt;VERY&lt;/B&gt;</span>
<span class="st">              &lt;B&gt;Very&lt;/B&gt;</span>
<span class="st">       but not: &lt;b&gt;Very&lt;/b&gt;</span>
<span class="st">  (?modifier:), (?i: ...)</span>


<span class="st">Named Capture &lt;P137&gt;</span>
<span class="st">Atomic grouping</span>
<span class="st">  (?&gt; ...)</span>

<span class="st">Class set opertions &lt;P123&gt;</span>
<span class="st">  [[a-z]&amp;&amp;[^aeiou]]</span>
<span class="st">  &quot;this and not that&quot;</span>

<span class="st">Greedy quantifiers &lt;P139&gt;</span>
<span class="st">Lazy (Non-Greedy) quantifiers</span></code></pre>
<pre class="sourceCode perl"><code class="sourceCode perl">quiz
where does fat|cat|belly|you match in the string
 <span class="kw">&quot;</span><span class="st">The dragging belly indicates your cat is too fat</span><span class="kw">&quot;</span>

Apply ^.*([<span class="dv">0-9</span>]+) to <span class="kw">&quot;</span><span class="st">Copyright 2003</span><span class="kw">&quot;</span>,
 what<span class="kw">'</span><span class="st">s captured by parentheses?</span></code></pre>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="co">### &quot;look around&quot;</span>
<span class="dt">$test</span> = <span class="kw">&quot;</span><span class="st">see Jeffs book</span><span class="kw">&quot;</span>;
<span class="dt">$test</span> =~ <span class="kw">s/</span><span class="ch">(?&lt;=</span><span class="ot">Jeff</span><span class="ch">)(?=</span><span class="ot">s</span><span class="ch">)</span><span class="kw">/</span><span class="st">'</span><span class="kw">/g</span>;
<span class="fu">print</span> <span class="kw">&quot;</span><span class="dt">$test </span><span class="ch">\n</span><span class="kw">&quot;</span>;    <span class="co">### expect see Jeff's book</span>

<span class="co">### Start of match ( or end of previous match): \G</span>
<span class="dt">$test</span> = <span class="kw">&quot;</span><span class="st">abcde</span><span class="kw">&quot;</span>;
<span class="dt">$test</span> =~ <span class="kw">s/</span><span class="ch">\G</span><span class="ot">x</span><span class="ch">?</span><span class="kw">/</span><span class="st">!</span><span class="kw">/g</span>;
<span class="fu">print</span> <span class="kw">&quot;</span><span class="dt">$test </span><span class="ch">\n</span><span class="kw">&quot;</span>;             <span class="co">### expect !abcde</span>
<span class="dt">$test</span> =~ <span class="kw">s/</span><span class="ot">\x</span><span class="ch">?</span><span class="kw">/</span><span class="st">!</span><span class="kw">/g</span>;
<span class="fu">print</span> <span class="kw">&quot;</span><span class="dt">$test </span><span class="ch">\n</span><span class="kw">&quot;</span>;             <span class="co">### expect !a!b!c!d!e</span></code></pre>
<h2 id="reference"><a href="#TOC">Reference</a></h2>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sun, 08 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/readings/2012-04-08-notes-master-regexp.html</guid>
</item>
<item>
    <title>Notes: ProGit</title>
    <link>http://haisgwu.info/posts/readings/2012-04-08-notes-progit.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Notes: ProGit</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  8, 2012</em>, Tags: <a href="../../tags/reading.html">reading</a>, <a href="../../tags/git.html">git</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#chapter-9.3">Chapter 9.3</a></li>
<li><a href="#chapter-6">Chapter 6</a></li>
<li><a href="#internal">Internal</a></li>
<li><a href="#reference">Reference</a></li>
</ul>
<h2 id="chapter-9.3"><a href="#TOC">Chapter 9.3</a></h2>
<ul>
<li>refs</li>
<li>refs/heads</li>
<li>refs/tags</li>
</ul>
<pre class="sh"><code>[remote &quot;origin&quot;]
    url = ...
    fetch = +refs/heads/* : refs/remotes/origin/*
      ===&gt; fetch all the references under &quot;refs/heads&quot; on the server 
           and writes them to refs/remotes/origin locally</code></pre>
<p><em>Questions</em></p>
<ol style="list-style-type: decimal">
<li>What does ‘git branch B_NAME’ actually do?</li>
<li>What happened to HEAD when switching branch?</li>
</ol>
<h2 id="chapter-6"><a href="#TOC">Chapter 6</a></h2>
<pre class="sh"><code>git add -i</code></pre>
<pre class="sh"><code>###
### revision selection
### ^ ::= parent of something, only two format ^ and ^2
git log HEAD^2 
git log d107aoeu^2
git log HEAD~3</code></pre>
<pre class="sh"><code>git log master..branchA
git log origin/master..HEAD
git log branchA branchB ^branchC
git log master...branchA</code></pre>
<h2 id="internal"><a href="#TOC">Internal</a></h2>
<p>Questions</p>
<div class="figure">
<img src="http://freizl.github.com/images/git_internal.png" alt="Git internal in one image"></img><p class="caption">Git internal in one image</p>
</div>
<h2 id="reference"><a href="#TOC">Reference</a></h2>
<ul>
<li><a href="http://progit.org/book/">ProGit</a></li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sun, 08 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/readings/2012-04-08-notes-progit.html</guid>
</item>
<item>
    <title>Quotes: Rework</title>
    <link>http://haisgwu.info/posts/readings/2012-04-08-quotes-rework.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Quotes: Rework</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  8, 2012</em>, Tags: <a href="../../tags/reading.html">reading</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#quotes">Quotes</a></li>
<li><a href="#reference">Reference</a></li>
</ul>
<h2 id="quotes"><a href="#TOC">Quotes</a></h2>
<ul>
<li>Draw a line in the sand</li>
<li>Build half a product, not a half-assed product</li>
<li>Start at the epicenter</li>
<li>You want to get into the rhythm of making choices</li>
<li>Be a curator</li>
<li>Lavish furniture</li>
<li>Distraction</li>
<li>You day is under siege by interruptions</li>
<li>Don’t try to sweep it under the rug</li>
<li>Inspiration is perishable</li>
<li>Ideas are immortal</li>
<li>(need, can’t, must, easy, just, only, fast) Those words get in the way of healthy communication.</li>
</ul>
<h2 id="reference"><a href="#TOC">Reference</a></h2>
<ul>
<li><a href="http://37signals.com/rework/">Rework</a></li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Sun, 08 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/readings/2012-04-08-quotes-rework.html</guid>
</item>
<item>
    <title>Bayesian Network Exercise 01</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-bayesian-network-exe01.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Bayesian Network Exercise 01</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/AI.html">AI</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#scenarios">Scenarios</a></li>
<li><a href="#resolution">Resolution</a></li>
</ul>
<h2 id="introduction"><a href="#TOC">Introduction</a></h2>
<p>AI Course Bayesian network excerice 01 resolution using enumeration method.</p>
<ul>
<li>C 国家政策</li>
<li>U 学校政策</li>
<li>W 工作压力</li>
<li>B 身体状况</li>
<li>D 过劳死</li>
</ul>
<h2 id="scenarios"><a href="#TOC">Scenarios</a></h2>
<ul>
<li>已知 : <a href="http://docs.google.com/fileview?id=0B4ERhObEn4HSOTRlMDQwMGEtZDI4OS00M2ExLWI1YTgtNzU1MzdjYjU2Mzlm&amp;authkey=CMWuqBQ&amp;hl=en">Exercise01</a></li>
<li>求 : 当 学校政策＝＝True 而且 工作压力 == True 时, 过劳死的概率.</li>
</ul>
<h2 id="resolution"><a href="#TOC">Resolution</a></h2>
<ul>
<li>Value T:0.95 means True case with probability 0.95</li>
<li>Probability of C is omitted as it is not related. Even include C, the result should be same.</li>
<li><p>Enumeration list</p>
<table>
<thead>
<tr class="header">
<th align="center">INDEX</th>
<th align="center"><em>U</em></th>
<th align="center"><em>W</em></th>
<th align="center"><em>B</em></th>
<th align="center"><em>D</em></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">1</td>
<td align="center">T:0.96</td>
<td align="center">T:0.90</td>
<td align="center">T:0.3</td>
<td align="center">T:0.335</td>
</tr>
<tr class="even">
<td align="center">2</td>
<td align="center">T:0.96</td>
<td align="center">T:0.90</td>
<td align="center">F:0.7</td>
<td align="center">T:0.3</td>
</tr>
<tr class="odd">
<td align="center">3</td>
<td align="center">T:0.96</td>
<td align="center">T:0.90</td>
<td align="center">T:0.3</td>
<td align="center">F:0.665</td>
</tr>
<tr class="even">
<td align="center">4</td>
<td align="center">T:0.06</td>
<td align="center">T:0.90</td>
<td align="center">F:0.7</td>
<td align="center">F:0.7</td>
</tr>
</tbody>
</table></li>
<li><p>Probability calculation</p></li>
</ul>
<pre class="sh"><code>P(D=T|U=T,W=T) 
  = ( P(1) + P(2) ) / ( P(1) + P(2 )+ ... + P(4) )
  = (0.96*0.90*0.3*0.335 + 0.96*0.90*0.7*0.3 ) / (...)
  = 0.3 * 1.035 / (0.3 * 1.035 + 0.3 * 0.665 + 0.7 * 0.7)
  = 31.05%</code></pre>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-bayesian-network-exe01.html</guid>
</item>
<item>
    <title>Trivial bind examples in JavaScipts</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-bind-examples-in-javascripts.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Trivial bind examples in JavaScipts</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/javascripts.html">javascripts</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#defined-a-function">Defined a function</a></li>
<li><a href="#run-it">Run it</a></li>
<li><a href="#run-it-with-bind">Run it with bind</a><ul>
<li><a href="#less">Less</a></li>
<li><a href="#more">More</a></li>
</ul></li>
<li><a href="#run-with-bind-and-context">Run with bind and context</a></li>
<li><a href="#diff-with-call-and-apply">Diff with call and apply</a></li>
<li><a href="#further">Further</a></li>
</ul>
<h2 id="defined-a-function"><a href="#TOC">Defined a function</a></h2>
<pre class="javascripts"><code>var fn = function (x, y, z) {
  console.log(&quot;The value: &quot;, this.shangHai);
  console.log(&quot;The sum is: &quot;, x+y+z);
}</code></pre>
<h2 id="run-it"><a href="#TOC">Run it</a></h2>
<pre class="javascripts"><code>fn(1);</code></pre>
<p>-&gt; Output</p>
<pre class="javascripts"><code>The value:  undefined
The sum is:  NaN</code></pre>
<pre class="javascripts"><code>fn(1,2,3);</code></pre>
<p>-&gt; Output:</p>
<pre class="javascripts"><code>The value:  undefined
The sum is:  6</code></pre>
<h2 id="run-it-with-bind"><a href="#TOC">Run it with bind</a></h2>
<h3 id="less"><a href="#TOC">Less</a></h3>
<pre class="javascripts"><code>fn.bind(null,1,2,3)</code></pre>
<p>-&gt; Output:</p>
<pre class="javascripts"><code>function () { [native code] }</code></pre>
<p>Hmm…, seems bind return a function rather apply the function and return value.</p>
<p>What will happen if invoke the new function?</p>
<pre class="javascripts"><code>fn.bind(null,1,2,3)()</code></pre>
<p>-&gt; Output:</p>
<pre class="javascripts"><code>The value:  undefined
The sum is:  6</code></pre>
<p>That is what we want.</p>
<h3 id="more"><a href="#TOC">More</a></h3>
<p>What are results respectively of following expressions?</p>
<ul>
<li><code>fn.bind(null, 1)()</code></li>
<li><code>fn.bind(null, 1)(2)</code></li>
<li><code>fn.bind(null, 1, 2)()</code></li>
<li><code>fn.bind(null, 1, 2)(3)</code></li>
<li><code>fn.bind(null, 1).bind(null, 2)()</code></li>
<li><code>fn.bind(null, 1).bind(null, 2)(3)</code></li>
</ul>
<p>Take one example</p>
<pre class="javascripts"><code>fn.bind(null,1,2)(3)</code></pre>
<p>-&gt; Output:</p>
<pre class="javascripts"><code>The value:  undefined
The sum is:  6</code></pre>
<p>How it produce result 6? <br />Because <code>bind</code> return is actually a partially applied function of<code>fn</code>.</p>
<p>In JavaScripts words, the new function got return is a closure which holding 1st and 2nd parameters for function <code>fn</code> and ready to accept the third parameter in order to fully apply function <code>fn</code>.</p>
<p>The concept is named <em>Currying</em> and find more in <a href="#further">Further</a> section.</p>
<p><em>PS</em>: turns out that <code>bind</code> is not really doing Currying according to <a href="http://en.wikipedia.org/wiki/Currying">here</a> and <a href="http://www.uncarved.com/blog/not_currying.mrk">here</a>. It is Partially Function Application more than Currying thouht it can do Currying at some sense.</p>
<h2 id="run-with-bind-and-context"><a href="#TOC">Run with bind and context</a></h2>
<p>What I really mean context here is actually about <code>this</code> used in the function. Still now, <em>this.shangHai</em> always output <code>undefined</code> but we would like it to mean something.</p>
<pre class="javascripts"><code>fn.bind({shangHai:&quot;lovely&quot;},1,2,3)();</code></pre>
<p>-&gt; Output:</p>
<pre class="javascripts"><code>The value:  lovely
The sum is:  6</code></pre>
<p>This time <code>this.shangHai</code> outputs “lovely” which obviously comes from the object that pass as first parameter of <code>bind</code>.</p>
<p>Generally speaking,<code>this</code> will be the object that pass in as the first parameter of bind when the object is not null.</p>
<p>Quiz: what <code>this</code> will be when passing null?</p>
<h2 id="diff-with-call-and-apply"><a href="#TOC">Diff with call and apply</a></h2>
<p>My understanding the key point is bind return a function.</p>
<p>By contract, <code>call</code> and <code>apply</code> is all about providing another way for invoking a function.</p>
<h2 id="further"><a href="#TOC">Further</a></h2>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Currying">Currying</a></li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-bind-examples-in-javascripts.html</guid>
</item>
<item>
    <title>Export a OrgMode doc in Chinese to PDF</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-export-orgmode-file-in-Chinese.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Export a OrgMode doc in Chinese to PDF</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/emacs.html">emacs</a>, <a href="../../tags/latex.html">latex</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#first-solution">First solution</a></li>
<li><a href="#second-solution">Second solution</a></li>
</ul>
<h2 id="introduction"><a href="#TOC">Introduction</a></h2>
<p>OrgMode is really cool and export context to latex then processed to PDF is quite straightforwards. However when working with Chinese characters, I need additional packages.</p>
<p>First of all, install the following packages. (I already install the texlive package)</p>
<pre><code>apt-get install latex-cjk-chinese latex-cjk-xcjk texlive-xetex</code></pre>
<h2 id="first-solution"><a href="#TOC">First solution</a></h2>
<p>Then in the org file, add the following latex options.</p>
<pre><code>#+LaTeX_HEADER: \usepackage{CJK}
#+LaTeX_HEADER: \begin{CJK}{UTF8}{gbsn}</code></pre>
<p>A littel drawback here is the <code>\begin{CJK}</code> is added as a header option whice due to it will not be closed when I checked with the tex output.</p>
<p>People suggest to change to <code>#+LaTeX: \begin{CJK}{UTF8}{gbsn}</code> and append <code>#+LaTex: \end{CJK}</code> to the end of document.</p>
<p>It all works out OK except the title which is Chinese characters as well can not display at all.</p>
<h2 id="second-solution"><a href="#TOC">Second solution</a></h2>
<p>Well, it is XeLaTex which has better support for UTF8. Actually I did not figure how to make it work with orgmode until a guy from orgmode mail list point out [[http://thread.gmane.org/gmane.emacs.orgmode/51914][another thread]].</p>
<p>All I need to do is adding following option to the org document.</p>
<pre><code>#+LATEX_HEADER: \usepackage{xltxtra}
#+LATEX_HEADER: \setmainfont{WenQuanYi Micro Hei}</code></pre>
<p>Also need to customize emacs latex to pdf process.</p>
<pre><code>(setq org-latex-to-pdf-process
      '(&quot;xelatex -interaction nonstopmode -output-directory %o %f&quot;
        &quot;xelatex -interaction nonstopmode -output-directory %o %f&quot;
        &quot;xelatex -interaction nonstopmode -output-directory %o %f&quot;))</code></pre>
<p><strong>PS: The main font has been setted may be vary among different systems. How I find a proper font under ubuntu is via command <code>fc-list</code>.</strong></p>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-export-orgmode-file-in-Chinese.html</guid>
</item>
<item>
    <title>Expression and Statement</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-expression-and-statement.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Expression and Statement</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/misc.html">misc</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#expression">Expression</a></li>
<li><a href="#statement">Statement</a></li>
<li><a href="#reference">Reference</a></li>
</ul>
<h2 id="expression"><a href="#TOC">Expression</a></h2>
<p>Something which evaluates to a value. Example:</p>
<pre><code>1 + 2/x</code></pre>
<h2 id="statement"><a href="#TOC">Statement</a></h2>
<p>A line of code which does something. Example:</p>
<pre><code>a = 1 + a; 
return 10; </code></pre>
<h2 id="reference"><a href="#TOC">Reference</a></h2>
<ul>
<li><a href="http://stackoverflow.com/questions/19132/expression-versus-statement">Discussion at Stackoverflow</a></li>
<li><a href="http://en.wikipedia.org/wiki/Statement_%28programming%29">Statement</a></li>
<li><a href="http://en.wikipedia.org/wiki/Expression_%28programming%29">Expression</a></li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-expression-and-statement.html</guid>
</item>
<item>
    <title>Git SVN</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-git-svn.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Git SVN</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/git.html">git</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#git-svn-initfetch">git svn init/fetch</a></li>
<li><a href="#git-svn-clone">git svn clone</a></li>
<li><a href="#git-svn-branch">git svn branch</a></li>
<li><a href="#alternative-with-svn-merge">alternative with svn merge</a></li>
</ul>
<h2 id="git-svn-initfetch"><a href="#TOC">git svn init/fetch</a></h2>
<pre><code>git svn init [-s] URL
git svn fetch -r xxx|HEAD
  a) it gets out 'all' branches/tags/trunk when no specific -r 
  b) by change some at branch, chdir to branches folder and play with git 
  c) if specify with -r, means &quot;Just want to checkout that revision&quot; 
                         then try git svn rebase to update to HEAD 
git svn rebase
</code></pre>
<h2 id="git-svn-clone"><a href="#TOC">git svn clone</a></h2>
<pre><code># if any problems with init/fetch, just clone and seems this is recommanded...
# seem should no targe name specified after URL
# verify with git branch -r should show all svn branches and tags
git svn clone [URL]</code></pre>
<h2 id="git-svn-branch"><a href="#TOC">git svn branch</a></h2>
<pre><code># create svn branch
git svn branch [svn_branch_1]

# set up local branch to dcommit to svn branch
git branch [local_branch_name] remotes/svn_branch_name

# do change at git local branch and merge into master with
git merge --squash
git commit
git svn dcommit</code></pre>
<h2 id="alternative-with-svn-merge"><a href="#TOC">alternative with svn merge</a></h2>
<pre><code>svn mergeinfo ... :
  git log master..branchx (diff commits that in branchx but master)
  git branch [--no-merged|--merged]

svn merge --dry-run
  git merge --no-commit --no-ff
</code></pre>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-git-svn.html</guid>
</item>
<item>
    <title>Git Tips</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-git-tips.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Git Tips</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/git.html">git</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#fetch">fetch</a></li>
<li><a href="#one-commit">one commit</a></li>
<li><a href="#log">log</a></li>
<li><a href="#miscs">miscs</a></li>
</ul>
<h2 id="fetch"><a href="#TOC">fetch</a></h2>
<pre><code>### fetch origin &quot;FROM&quot; : &quot;TO&quot;
fetch = +refs/heads/master:refs/remotes/origin/master

git fetch origin master:refs/remotes/origin/mymaster
git fetch origin master:refs/remotes/origin/mymaster
          topic:refs/remotes/origin/topic</code></pre>
<h2 id="one-commit"><a href="#TOC">one commit</a></h2>
<p><a href="../../docs/git_one_commit.pdf">What happened after one commit</a></p>
<h2 id="log"><a href="#TOC">log</a></h2>
<h2 id="miscs"><a href="#TOC">miscs</a></h2>
<pre><code>git instaweb --httpd=lighttpd

### anything need push
git remote show origin

### init new repos
git clone --bare my_project my_project.git

git reset --hard 7e83	

git checkout 82f5 [-b branch_name]	This takes you back in time, while preserving newer commits.
git checkout :/&quot;my first brach&quot;	        Jump to the commit that starts with a given message.
git checkout master~5	                5th last saved state.(BRANCH_NAME~number)

git whatchanged 	
git cherry-pick	

git rebase	
git rebase -I HEAD~10	modify last 10 commits
git commit --amend	

git filter-branch --tree-filter 'rm top/sececre/file' HEAD	remove file from all commit

git bundle	

git branch -r	

###diff with remote branch,a.k. what are local change
git diff remotes/HEAD	

git reflog	
</code></pre>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-git-tips.html</guid>
</item>
<item>
    <title>Perl Tips</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-perl-tips.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Perl Tips</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/perl.html">perl</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#basic">Basic</a></li>
<li><a href="#loop">Loop</a></li>
<li><a href="#sub">Sub</a></li>
<li><a href="#data-structure">Data Structure</a><ul>
<li><a href="#aoa">AoA</a></li>
</ul></li>
<li><a href="#references">References</a></li>
</ul>
<h2 id="basic"><a href="#TOC">Basic</a></h2>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="kw">my</span> <span class="dt">@myarray</span> = ();
<span class="fu">push</span> <span class="dt">@myarray,</span><span class="kw">&quot;</span><span class="st">a</span><span class="kw">&quot;</span>;</code></pre>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="kw">my</span> <span class="dt">@keys</span> = <span class="kw">qw(</span>a b c<span class="kw">)</span>;
<span class="kw">my</span> <span class="dt">@vals</span> = (<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>);
<span class="kw">my</span> <span class="dt">%hash;</span>
<span class="dt">@hash</span>{<span class="dt">@keys</span>} = <span class="dt">@vals;</span></code></pre>
<h2 id="loop"><a href="#TOC">Loop</a></h2>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="co"># loop elements in itemArray1 and itemArray2</span>
<span class="kw">foreach</span> <span class="kw">my</span> <span class="dt">$item</span> (<span class="dt">@itemArray1,</span> <span class="dt">@itemArray2)</span> {
  ...
}

<span class="kw">while</span> ( <span class="kw">my</span> (<span class="dt">$key,</span> <span class="dt">$value)</span> = <span class="kw">each</span>(<span class="dt">%hash)</span> ) {
  <span class="fu">print</span> <span class="kw">&quot;</span><span class="dt">$key =&gt; $value</span><span class="ch">\n</span><span class="kw">&quot;</span>;
}</code></pre>
<h2 id="sub"><a href="#TOC">Sub</a></h2>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="kw">sub </span><span class="fu">prepare_sth</span> {
  <span class="kw">my</span> <span class="dt">$param</span> = <span class="fu">shift</span>;  <span class="co"># means shift @_, @_ is param array</span>
  <span class="co"># my $param = $_;   # when could use $_ ??</span>
}</code></pre>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="kw">sub </span><span class="fu">uniq</span> {
  <span class="dt">@list</span> = <span class="fu">shift</span>;
  <span class="dt">%seen</span> = (); 
  <span class="dt">@uniqu</span> = <span class="fu">grep</span> { ! <span class="dt">$seen</span>{<span class="dt">$_</span>} ++ } <span class="dt">@list;</span>
}</code></pre>
<h2 id="data-structure"><a href="#TOC">Data Structure</a></h2>
<h3 id="aoa"><a href="#TOC">AoA</a></h3>
<p>from book <programming perl></p>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="co">### Assign a list of array references to an array.</span>
<span class="dt">@AoA</span> = (
         [ <span class="kw">&quot;</span><span class="st">fred</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">barney</span><span class="kw">&quot;</span> ],
         [ <span class="kw">&quot;</span><span class="st">george</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">jane</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">elroy</span><span class="kw">&quot;</span> ],
         [ <span class="kw">&quot;</span><span class="st">homer</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">marge</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">bart</span><span class="kw">&quot;</span> ],
);
<span class="fu">print</span> <span class="dt">$AoA[2][1];</span>   <span class="co"># prints &quot;marge&quot;</span>

<span class="co">### Create an reference to an array of array references.</span>
<span class="dt">$ref_to_AoA</span> = [
    [ <span class="kw">&quot;</span><span class="st">fred</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">barney</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">pebbles</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">bamm bamm</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">dino</span><span class="kw">&quot;</span>, ],
    [ <span class="kw">&quot;</span><span class="st">homer</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">bart</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">marge</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">maggie</span><span class="kw">&quot;</span>, ],
    [ <span class="kw">&quot;</span><span class="st">george</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">jane</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">elroy</span><span class="kw">&quot;</span>, <span class="kw">&quot;</span><span class="st">judy</span><span class="kw">&quot;</span>, ],
];

<span class="fu">print</span> <span class="dt">$ref_to_AoA</span>-&gt;<span class="dt">[2][3];</span>   <span class="co"># prints &quot;judy&quot;</span></code></pre>
<p>Remember that there is an implied -&gt; between every pair of adjacent braces or brackets. <strong>(Simply saying, -&gt; indicates a reference which created via [])</strong>.</p>
<p>Therefore these two lines:</p>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="dt">$AoA[2][3]</span>
<span class="dt">$ref_to_AoA</span>-&gt;<span class="dt">[2][3]</span></code></pre>
<p>are equivalent to these two lines:</p>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="dt">$AoA[2]</span>-&gt;<span class="dt">[3]</span>
<span class="dt">$ref_to_AoA</span>-&gt;<span class="dt">[2]</span>-&gt;<span class="dt">[3]</span></code></pre>
<h2 id="references"><a href="#TOC">References</a></h2>
<ul>
<li><a href="http://www.cs.mcgill.ca/~abatko/computers/programming/perl/howto/hash/">Perl Hash Howto</a></li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-perl-tips.html</guid>
</item>
<item>
    <title>Python Tips</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-python-tips.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Python Tips</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/python.html">python</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#re">re</a></li>
<li><a href="#list">list</a></li>
<li><a href="#dict">dict</a></li>
<li><a href="#mise">Mise</a></li>
<li><a href="#reference">Reference</a></li>
</ul>
<h2 id="re"><a href="#TOC">re</a></h2>
<pre class="sourceCode python"><code class="sourceCode python">&gt;&gt;&gt; re.split(<span class="st">&quot;[^0-9]&quot;</span>, <span class="st">&quot;12 34 + 2 *&quot;</span>)
[<span class="st">'12'</span>, <span class="st">'34'</span>, <span class="st">''</span>, <span class="st">''</span>, <span class="st">'2'</span>, <span class="st">''</span>, <span class="st">''</span>] </code></pre>
<p>Cant understand how ’’ being produced.</p>
<h2 id="list"><a href="#TOC">list</a></h2>
<pre class="sourceCode python"><code class="sourceCode python"><span class="dt">str</span>(<span class="st">&quot;abcdef&quot;</span>)[::-<span class="dv">1</span>] ==&gt; <span class="st">&quot;fedcba&quot;</span>
<span class="dt">reduce</span>(<span class="kw">lambda</span> x,y:y+x,<span class="st">&quot;abcdef&quot;</span>) ==&gt; <span class="st">&quot;fedcba&quot;</span>
<span class="dt">sorted</span>([<span class="dv">1</span>,<span class="dv">5</span>,<span class="dv">3</span>,<span class="dv">2</span>]) ==&gt; [<span class="dv">1</span>,<span class="dv">2</span>,<span class="dv">3</span>,<span class="dv">5</span>]
a = [<span class="dv">1</span>,<span class="dv">5</span>,<span class="dv">3</span>,<span class="dv">2</span>]; a.sort() ==&gt; a := [<span class="dv">1</span>,<span class="dv">2</span>,<span class="dv">3</span>,<span class="dv">5</span>]</code></pre>
<h2 id="dict"><a href="#TOC">dict</a></h2>
<pre class="sourceCode python"><code class="sourceCode python"><span class="co">### demostrate loop a dict and list/dict parameter</span>
<span class="kw">def</span> tst_dict(*args, **kargs):
    <span class="kw">for</span> k, v in <span class="dt">dict</span>(*args, **kargs).iteritems():
        <span class="kw">print</span> k, v

<span class="kw">def</span> tst_dict2():
    <span class="kw">for</span> key in a_dict:
        <span class="kw">print</span> key, a_dict[key]

tst_dict(name=<span class="st">'aa'</span>, place=<span class="st">'bb'</span>)
tst_dict(<span class="st">'aaa'</span>, <span class="st">'bbb'</span>) <span class="co"># throw error</span></code></pre>
<h2 id="mise"><a href="#TOC">Mise</a></h2>
<pre class="sourceCode python"><code class="sourceCode python"><span class="dt">range</span>(<span class="dv">4</span>) ==&gt; [<span class="dv">0</span>,<span class="dv">1</span>,<span class="dv">2</span>,<span class="dv">3</span>] <span class="co">#range start from 0 by default</span>
<span class="st">'</span><span class="ot">%s</span><span class="st">: </span><span class="ot">%r</span><span class="st">'</span> % (something, other)
<span class="st">'</span><span class="ot">%(name)s</span><span class="st"> is </span><span class="ot">%(value)d</span><span class="st">'</span> % {
    <span class="st">'name'</span>: <span class="st">'The answer'</span>,
    <span class="st">'value'</span>: <span class="dv">42</span>,
}</code></pre>
<h2 id="reference"><a href="#TOC">Reference</a></h2>
<ul>
<li><a href="http://docs.python.org/library/re.html">re reference</a></li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-python-tips.html</guid>
</item>
<item>
    <title>Shell Tips</title>
    <link>http://haisgwu.info/posts/tech/2012-04-06-shell-tips.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Shell Tips</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April  6, 2012</em>, Tags: <a href="../../tags/shell.html">shell</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#quicklinks">Quicklinks</a></li>
<li><a href="#reference">Reference</a></li>
<li><a href="#sample-section-a">Sample Section A</a><ul>
<li><a href="#grep">grep</a></li>
<li><a href="#find">find</a></li>
<li><a href="#awk">awk</a></li>
<li><a href="#sed">sed</a></li>
<li><a href="#cp">cp</a></li>
</ul></li>
<li><a href="#sample-section-b">Sample Section B</a><ul>
<li><a href="#while">while</a></li>
<li><a href="#for">for</a></li>
<li><a href="#case">case</a></li>
</ul></li>
</ul>
<h2 id="quicklinks"><a href="#TOC">Quicklinks</a></h2>
<ul>
<li>[[http://bash.cyberciti.biz/guide/What_is_a_Subshell%3F][What is a Subshell]]</li>
<li>[[http://en.wikipedia.org/wiki/List_of_Unix_utilities][List of Unix utilities]]</li>
<li>[[http://www-128.ibm.com/developerworks/aix/library/au-badunixhabits.html?ca=lnxw01GoodUnixHabits][10 Good Unix habits]]</li>
</ul>
<h2 id="reference"><a href="#TOC">Reference</a></h2>
<ul>
<li>() execute command in subshell</li>
<li>{} execute command in currecnt shell Usage is same with () expect the final command in the list ends with a semicolon.</li>
</ul>
<h2 id="sample-section-a"><a href="#TOC">Sample Section A</a></h2>
<h3 id="grep"><a href="#TOC">grep</a></h3>
<pre class="sh"><code>grep -Elr --include=*.xsd --exclude-dir={branches,tags} VendorDesc.xsd $DIRECTORY
### count process and exclude grep itself
ps aux | grep vpnc | grep -v grep -c</code></pre>
<h3 id="find"><a href="#TOC">find</a></h3>
<pre class="sh"><code>find ${1} \( -name Consume*wsdl -o -name Produce*wsdl \) -path *trunk*
find $update_dir \( -name '*.java' \) \( -path '**/source/**' -o -path '**/test/**' -o -path '**/resource/**' \)</code></pre>
<h3 id="awk"><a href="#TOC">awk</a></h3>
<pre class="sh"><code>### list all time of each ping
awk -F&quot;=&quot; '/time=/ {print substr($4,0,length($4)-3) }' &lt; ping.log
### passing shell parameter to awk scripts
svn st ${dirs} | awk -F&quot; &quot; -v ac=&quot;${*}&quot; ' /'${predicate}'/ &amp;&amp; (index($2,&quot;\\&quot;)==0 || gsub(/\\/,&quot;/&quot;,$2)) {print ac, $2}'
### change Output Row Separator
awk ' BEGIN { ORS = &quot; &quot; } { print }'</code></pre>
<h3 id="sed"><a href="#TOC">sed</a></h3>
<pre class="sh"><code>ll | sed '/Stores\|Test\|^-\|^t/d' | wc
smbclient -L \\\\hangzhou2\\twitters -U foobar | sed '/Hangzhou20/,$d'
export BEA_IP=`/sbin/ifconfig eth0 | sed '/inet addr/!d;s/.*addr:\([^ ]\+\).*/\1/g'`</code></pre>
<h3 id="cp"><a href="#TOC">cp</a></h3>
<pre class="sh"><code>cp filename{,.bak}</code></pre>
<h2 id="sample-section-b"><a href="#TOC">Sample Section B</a></h2>
<h3 id="while"><a href="#TOC">while</a></h3>
<pre class="sh"><code>while getopts &quot;:ab:c&quot; opt; do
	case $opt in
	a ) echo &quot;I am a&quot; ;;
	b ) echo $OPTARG  ;;
	c ) echo &quot;i am c&quot; ;;
	? ) echo &quot;usage : $0 [-a] [-b barg] [-c] args ..&quot;
	    exit 1 ;;
	esac
    shift $(($OPTIND - 1))
done</code></pre>
<h3 id="for"><a href="#TOC">for</a></h3>
<pre class="sh"><code>for s in $(echo $string | sed &quot;s/;/ /g&quot;); do
	echo $s
done</code></pre>
<pre class="sh"><code>for (( i=1; i&lt;=$n; i++ )) do
   ls -1 &quot;${file_pattern}&quot; | sed 's#\(.*\)\(.xml\).bak#cp &amp; \1'&quot;_$i&quot;'\2#g'
done</code></pre>
<h3 id="case"><a href="#TOC">case</a></h3>
<pre class="sh"><code>case $action in
    backup ) tar cfj &quot;$backup_dir/$bakfile&quot; * --exclude &quot;jobs/*/workspace&quot; ;;
    rest | restore ) tar xfj $backup_dir/$bakfile ;;
    * ) echo &quot;all supported actions: backup | rest[ore]&quot; ; exit 0 ;;
esac</code></pre>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Fri, 06 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-06-shell-tips.html</guid>
</item>
<item>
    <title>Confused Constructor in JavaScipts</title>
    <link>http://haisgwu.info/posts/tech/2012-04-12-confused-constructor-js.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Confused Constructor in JavaScipts</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April 12, 2012</em>, Tags: <a href="../../tags/javascripts.html">javascripts</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#sample">Sample</a></li>
<li><a href="#jquery.fn.init">JQuery.fn.init</a></li>
</ul>
<h2 id="introduction"><a href="#TOC">Introduction</a></h2>
<p>I can not quite remember what happened when invoking <code>new</code> over a function. While I’m looking at function <code>init</code> at jQuery source, the concern comes to me again.</p>
<p>Fourtunaly I think the answer at this<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup> thread turns out to be a quite clear explanation.</p>
<p>Just three things according to that answer.</p>
<ol style="list-style-type: decimal">
<li>Creates a new object. Its type is <code>object</code>.</li>
<li>Sets this new object’s internal, inaccessible, <code>[[prototype]]</code> property to be the constructor function’s external, accessible, <code>prototype</code> object. <em>Refer to line 11 at <a href="#sample">sample</a></em>.</li>
<li>Executes the constructor function, using the new object whenever <code>this</code> is mentioned.</li>
</ol>
<p>Regarding #2, we might have question like</p>
<ol style="list-style-type: lower-roman">
<li>What is constuctor function’s <code>prototype</code> object?</li>
<li>What is the <code>[[prototype]]</code>?</li>
</ol>
<p>The answer are</p>
<ol style="list-style-type: lower-roman">
<li>Function’s <code>prototype</code> property is automatically created which in turn has a constructor property pointing back to the function. <em>Refer to line 4 at <a href="#sample">sample</a></em></li>
<li>Basically <code>[[prototype]]</code> is used for prototype chain. Find details at here<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> and Ecma-262<sup><a href="#fn3" class="footnoteRef" id="fnref3">3</a></sup>.</li>
</ol>
<p>Therefore if we change the <code>prototype</code> property of the function before <code>new</code>, the <code>[[prototype]]</code> of instances afterwards is vary accordingly. <em>Refer to line 19 at <a href="#sample">sample</a></em></p>
<h2 id="sample"><a href="#TOC">Sample</a></h2>
<ul>
<li><strong>tested at google chrome 18 and pay close attention to comments.</strong></li>
</ul>
<table class="sourceCode javascript numberLines"><tr class="sourceCode"><td class="lineNumbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="sourceCode"><pre><code class="sourceCode javascript">
<span class="kw">var</span> fn1 = <span class="kw">function</span> () { <span class="kw">this</span>.<span class="fu">name</span> = <span class="st">&quot;fn1&quot;</span>; }

<span class="kw">fn1</span>.<span class="fu">prototype</span>          <span class="co">// Object { constructor: function () { this.name = &quot;fn1&quot;; }</span>
                       <span class="co">//        , __proto__: Object }</span>

<span class="kw">fn1</span>.__<span class="fu">proto</span>__          <span class="co">// function Empty() {}</span>


<span class="kw">var</span> x1 = <span class="kw">new</span> fn1();
<span class="kw">x1</span>.__<span class="fu">proto</span>__ === <span class="kw">fn1</span>.<span class="fu">prototype</span>  <span class="co">// True</span>

<span class="kw">x1</span>.__<span class="fu">proto</span>__           <span class="co">// Object { constructor: function () { this.name = &quot;fn1&quot;; }</span>
                       <span class="co">//        , __proto__: Object }</span>
<span class="kw">x1</span>.<span class="fu">constructor</span>         <span class="co">// function () { this.name = &quot;fn1&quot;; }</span>


<span class="kw">fn1</span>.<span class="fu">prototype</span> = {<span class="ch">'location'</span>: <span class="ch">'sea'</span>}

<span class="kw">var</span> y1 = <span class="kw">new</span> fn1();
<span class="kw">x1</span>.__<span class="fu">proto</span>__ === <span class="kw">fn1</span>.<span class="fu">prototype</span>  <span class="co">// True</span>

<span class="kw">y1</span>.__<span class="fu">proto</span>__;          <span class="co">// Object { location: &quot;sea&quot;</span>
                       <span class="co">//        ,__proto__: Object }</span>
<span class="kw">y1</span>.<span class="fu">constructor</span>;        <span class="co">// function Object() { [native code] }</span>
</code></pre></td></tr></table>
<ul>
<li>Quiz: Why y1.constructor is not same as x1.constructor?</li>
</ul>
<h2 id="jquery.fn.init"><a href="#TOC">JQuery.fn.init</a></h2>
<ul>
<li><code>jQuery</code> is declarated as</li>
</ul>
<pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="kw">var</span> jQuery = <span class="kw">function</span>( selector, context ) {
		<span class="co">// The jQuery object is actually just the init constructor 'enhanced'</span>
		<span class="kw">return</span> <span class="kw">new</span> <span class="kw">jQuery.fn</span>.<span class="fu">init</span>( selector, context, rootjQuery );
	},</code></pre>
<ul>
<li><code>jQuery.fn</code> is just a object as</li>
</ul>
<pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="kw">jQuery</span>.<span class="fu">fn</span> = {
	<span class="dt">constructor</span>: jQuery,
	<span class="dt">init</span>: <span class="kw">function</span>( selector, context, rootjQuery ) {
		    <span class="kw">var</span> match, elem, ret, doc;
            ... ...
          },
    ... ... <span class="co">// many API declaration.</span>
}</code></pre>
<ul>
<li>Function chain</li>
</ul>
<p>Since <code>jQuery</code> is just a function, we are able to do with a selector like <code>jQuery('div.navigator').addClass('nav')</code>.</p>
<p>Actually in order to use jQuery API like <code>addClass</code>, there must exists following something which of cource can be found at around line 322 of jQuery.1.7.1.css<sup><a href="#fn4" class="footnoteRef" id="fnref4">4</a></sup>.</p>
<pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="kw">jQuery.fn.init</span>.<span class="fu">prototype</span> = <span class="kw">jQuery</span>.<span class="fu">fn</span>;</code></pre>
<div class="footnotes">
<hr></hr>
<ol>
<li id="fn1"><p><a href="http://stackoverflow.com/questions/1646698/what-is-the-new-keyword-in-javascript">What is new keyword in JS</a><a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><a href="http://joost.zeekat.nl/constructors-considered-mildly-confusing.html">Constructors considered confusing</a><a href="#fnref2">↩</a></p></li>
<li id="fn3"><p><a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">Ecma262</a><a href="#fnref3">↩</a></p></li>
<li id="fn4"><p><a href="http://code.jquery.com/jquery-1.7.2.js">jQuery 1.7.1</a><a href="#fnref4">↩</a></p></li>
</ol>
</div>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Thu, 12 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-12-confused-constructor-js.html</guid>
</item>
<item>
    <title>Objects created at one commit</title>
    <link>http://haisgwu.info/posts/tech/2012-04-12-git-one-commit.html</link>
    <description><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
    <title>Happy Programming</title>
    <link rel="stylesheet" type="text/css" href="../../css/default.css"></link>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Ubuntu|Open+Sans" rel="stylesheet" type="text/css">
    <link rel="alternate" type="application/rss+xml" title="Haisheng's Blog" href="rss.xml"></link>
    <link rel="icon" type="image/png" href="../../images/favicon.ico"></link>
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-6496210-5']);
      _gaq.push(['_setDomainName', 'haisgwu.info']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>

  </head>
  <body>
    <div id="main">

      <div class="navbar-inner">
        <div class="container">
          <a class="brand" href="../../">Home</a>
          <!--           <a class="brand" href="/">λome</a>  -->
        </div>
      </div>

      
      <div class="container">
        <div class="boxer">

  <h1>Objects created at one commit</h1>

  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>
  <div class="to-right"><em>Haisheng, Wu on April 12, 2012</em>, Tags: <a href="../../tags/git.html">git</a></div>
  
  <div class="body clear">
  <h2 id="TOC">TOC</h2>
<ul>
<li><a href="#play-it">Play it</a><ul>
<li><a href="#new-two-files">new two files</a></li>
<li><a href="#git-add">git-add</a></li>
<li><a href="#no-objects-created-yet">no objects created yet</a></li>
<li><a href="#git-commit">git-commit</a></li>
<li><a href="#git-obj-list">git-obj-list</a></li>
<li><a href="#what-are-they">what are they</a></li>
</ul></li>
<li><a href="#further">Further</a></li>
</ul>
<h2 id="play-it"><a href="#TOC">Play it</a></h2>
<h3 id="new-two-files"><a href="#TOC">new two files</a></h3>
<pre class="sh"><code>haiswu@haiswu-VirtualBox:~/github/haisheng-homepage/test$ echo &quot;11111&quot; &gt; 1.txt
haiswu@haiswu-VirtualBox:~/github/haisheng-homepage/test$ echo &quot;22222&quot; &gt; 2.txt</code></pre>
<h3 id="git-add"><a href="#TOC">git-add</a></h3>
<pre class="sh"><code>haiswu@haiswu-VirtualBox:~/github/haisheng-homepage/test$ git add .
haiswu@haiswu-VirtualBox:~/github/haisheng-homepage/test$ git st
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)
#
#	new file:   1.txt
#	new file:   2.txt
#</code></pre>
<h3 id="no-objects-created-yet"><a href="#TOC">no objects created yet</a></h3>
<pre class="sh"><code>haiswu@haiswu-VirtualBox:~/github/haisheng-homepage/test$ git rev-list --objects --all</code></pre>
<h3 id="git-commit"><a href="#TOC">git-commit</a></h3>
<pre class="sh"><code>haiswu@haiswu-VirtualBox:~/github/haisheng-homepage/test$ git ci &quot;first commit&quot;
[master (root-commit) 8ef1919] first commit
 2 files changed, 2 insertions(+), 0 deletions(-)
 create mode 100644 1.txt
 create mode 100644 2.txt
</code></pre>
<h3 id="git-obj-list"><a href="#TOC">git-obj-list</a></h3>
<pre class="sh"><code>
haiswu@haiswu-VirtualBox:~/github/haisheng-homepage/test$ git rev-list --objects --all
8ef1919e4ca33cf602488a27b5671a6b6acf754b
8ed6deeabbbb89cda775aafc10745ea40dcd8456 
f7c6dd0164fe0eb4fde767f9e731a6c8ade0b69f 1.txt
0ac1ae0ae201d8db7ac29015a6ba7494db37d59c 2.txt
</code></pre>
<h3 id="what-are-they"><a href="#TOC">what are they</a></h3>
<pre class="sh"><code>## | Blob objects
~/github/haisheng-homepage/test$ git cat-file -p f7c6dd0164fe0eb4fde767f9e731a6c8ade0b69f
11111
~/github/haisheng-homepage/test$ git cat-file -p 0ac1ae0ae201d8db7ac29015a6ba7494db37d59c
22222

## | Commit objects
~/github/haisheng-homepage/test$ git cat-file -p 8ef1919e4ca33cf602488a27b5671a6b6acf754b
tree 8ed6deeabbbb89cda775aafc10745ea40dcd8456
author Haisheng.W.WU &lt;freizl@gmail.com&gt; 1334230087 +0800
committer Haisheng.W.WU &lt;freizl@gmail.com&gt; 1334230087 +0800

first commit

## | Tree objects
~/github/haisheng-homepage/test$ git cat-file -p 8ed6deeabbbb89cda775aafc10745ea40dcd8456
100644 blob f7c6dd0164fe0eb4fde767f9e731a6c8ade0b69f	1.txt
100644 blob 0ac1ae0ae201d8db7ac29015a6ba7494db37d59c	2.txt
</code></pre>
<h2 id="further"><a href="#TOC">Further</a></h2>
<ul>
<li><a href title="http://book.git-scm.com/">Git object model</a></li>
<li><a href title="http://0.0.0.0:9900/posts/readings/2012-04-08-notes-progit.html#internal">Git internal in one image</a></li>
</ul>
  </div>
  
  <div class="to-left">
    <small><a href="../../index.html">Back to Home</a></small>
  </div>

  <div class="to-right">
    <small><a href="../../posts.html">View archive</a></small>
  </div>
  
  <div class="clear"></div>

</div>

      </div>

      <div class="footer clear">
        <p><a href="../../cv.html">about me</a> | <a target="_blank" href="https://github.com/freizl/haisheng-homepage/tree/master/src">source code</a> | site generated by <a href="http://github.com/jaspervdj/hakyll">hakyll</a></p>
      </div>

    </div>
  </body>
</html>
]]></description>
    <pubDate>Thu, 12 Apr 2012 00:00:00 UT</pubDate>
    <guid>http://haisgwu.info/posts/tech/2012-04-12-git-one-commit.html</guid>
</item>

    </channel> 
</rss>
