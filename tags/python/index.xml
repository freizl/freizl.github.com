<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Corner case</title><link>https://freizl.github.io/tags/python/</link><description>Recent content in Python on Corner case</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Haisheng Wu</copyright><lastBuildDate>Fri, 06 Apr 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://freizl.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Tips</title><link>https://freizl.github.io/posts/python-tips/</link><pubDate>Fri, 06 Apr 2012 00:00:00 +0000</pubDate><guid>https://freizl.github.io/posts/python-tips/</guid><description>re &amp;gt;&amp;gt;&amp;gt; re.split(&amp;#34;[^0-9]&amp;#34;, &amp;#34;12 34 + 2 *&amp;#34;) [&amp;#39;12&amp;#39;, &amp;#39;34&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;] Cant understand how '' being produced.
list str(&amp;#34;abcdef&amp;#34;)[::-1] ==&amp;gt; &amp;#34;fedcba&amp;#34; reduce(lambda x,y:y+x,&amp;#34;abcdef&amp;#34;) ==&amp;gt; &amp;#34;fedcba&amp;#34; sorted([1,5,3,2]) ==&amp;gt; [1,2,3,5] a = [1,5,3,2]; a.sort() ==&amp;gt; a := [1,2,3,5] dict ### demostrate loop a dict and list/dict parameter def tst_dict(*args, **kargs): for k, v in dict(*args, **kargs).iteritems(): print k, v def tst_dict2(): for key in a_dict: print key, a_dict[key] tst_dict(name=&amp;#39;aa&amp;#39;, place=&amp;#39;bb&amp;#39;) tst_dict(&amp;#39;aaa&amp;#39;, &amp;#39;bbb&amp;#39;) # throw error Mise range(4) ==&amp;gt; [0,1,2,3] #range start from 0 by default &amp;#39;%s: %r&amp;#39; % (something, other) &amp;#39;%(name)sis %(value)d&amp;#39; % { &amp;#39;name&amp;#39;: &amp;#39;The answer&amp;#39;, &amp;#39;value&amp;#39;: 42, } Reference re reference</description></item><item><title>Crawl Chinese web site with Scrapy</title><link>https://freizl.github.io/posts/crawl-chinese-web-site-with-scrapy/</link><pubDate>Sat, 26 Sep 2009 18:48:00 -0700</pubDate><guid>https://freizl.github.io/posts/crawl-chinese-web-site-with-scrapy/</guid><description>The response return by Scrapy is a Python repr() object thus Chinese character &amp;lsquo;display&amp;rsquo; in Unicode.
Quick fix is like this:
item[&amp;lsquo;name&amp;rsquo;][0].encode(&amp;lsquo;utf-8&amp;rsquo;)
Though some characters are still display incorrectly.
Find source code here.
More about Unicode in Python:
http://evanjones.ca/python-utf8.html
http://www.b-list.org/weblog/2007/nov/10/unicode/</description></item><item><title>Decode Characters in Python</title><link>https://freizl.github.io/posts/class-cp037decoder-charset-cp037-def/</link><pubDate>Mon, 08 Dec 2008 23:15:00 -0800</pubDate><guid>https://freizl.github.io/posts/class-cp037decoder-charset-cp037-def/</guid><description>class CP037Decoder:
_CHARSET_ = &amp;lsquo;cp037&amp;rsquo;
def __init__(self, message):
self.decode_message = unicode(message, self._CHARSET_)
def show_in_utf8(self):
print self.decode_message.encode(&amp;lsquo;utf8&amp;rsquo;)
if __name__ == &amp;lsquo;__main__':
msg_file = open(sys.argv[1], &amp;lsquo;r&amp;rsquo;)
CP037Decoder(msg_file.read()).show_in_utf8()
msg_file.close()</description></item><item><title>Simple Sample of Regular Expression in Python</title><link>https://freizl.github.io/posts/simple-sample-of-regular-expression-in/</link><pubDate>Fri, 11 Jul 2008 03:50:00 -0700</pubDate><guid>https://freizl.github.io/posts/simple-sample-of-regular-expression-in/</guid><description>import re
def read_file():
file_name = &amp;lsquo;merge.log&amp;rsquo;
file = open(file_name, &amp;lsquo;r&amp;rsquo;)
file_content = file.read()
patterns = re.compile(r'(r\d{5}\s\|\scn-cma)(.*(?!cn-cma).*)(r\d{5}\s\|\s(?!cn-cma))', re.DOTALL)
results = patterns.search(file_content)
#results = patterns.match(file_content)
print dir(results)
if results :
results = results.groups()
print results[0]
def display(x):
print &amp;lsquo;$&amp;rsquo; * 50, &amp;lsquo;\n&amp;rsquo;, x
#[ display(x) for x in results ]
file.close()
merge.log</description></item><item><title>map, iterate function list, time in python</title><link>https://freizl.github.io/posts/map-iterate-function-list-time-in/</link><pubDate>Thu, 03 Apr 2008 20:34:00 -0700</pubDate><guid>https://freizl.github.io/posts/map-iterate-function-list-time-in/</guid><description>from __future__ import division
def prime1(y):
if y &amp;lt;= 1:
print y, &amp;lsquo;not prime&amp;rsquo;
else:
x = y // 2
while x &amp;gt; 1:
if y % x == 0:
retValue = y, &amp;lsquo;has factor&amp;rsquo;, x
break
x -= 1
else:
retValue = y, &amp;lsquo;is prime&amp;rsquo;
def timer(reps, func, *args):
import time
start = time.clock()
for i in xrange(reps):
map(func, args)
return time.clock() - start
for func in (prime1,):
print timer(10000, func, 12,15,18,20,22,30)</description></item></channel></rss>