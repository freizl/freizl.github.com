<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computer Science on Corner case</title><link>https://freizl.github.io/tags/computer-science/</link><description>Recent content in Computer Science on Corner case</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Haisheng Wu</copyright><lastBuildDate>Sun, 25 Nov 2007 23:51:00 -0800</lastBuildDate><atom:link href="https://freizl.github.io/tags/computer-science/index.xml" rel="self" type="application/rss+xml"/><item><title>Floating number in binary format</title><link>https://freizl.github.io/posts/floating-number-in-binary-format/</link><pubDate>Sun, 25 Nov 2007 23:51:00 -0800</pubDate><guid>https://freizl.github.io/posts/floating-number-in-binary-format/</guid><description>How to calculate its decimal value:
exponent(0111 1100) := 27 - 4 - (2(8-1) - 1) = -3
fraction :=1.012 = 1.2510
here, m = 1. because the number above is normalized. follow to the link below to see the detail why m=1.
So the result is: 1.25 * (2-3) = 0.15625
Found interesting when I was studying the IEEE-754 Standard, and of course I can not understand several concepts.</description></item><item><title>Two's component</title><link>https://freizl.github.io/posts/twos-component_8467/</link><pubDate>Tue, 14 Aug 2007 06:00:00 -0700</pubDate><guid>https://freizl.github.io/posts/twos-component_8467/</guid><description>Two&amp;rsquo;s component is one of the Signed number representations. Its principles is described as following. (refer to original at http://en.wikipedia.org/wiki/Two%27s_complement )
The 2_n_ possible values of n bits actually form a ring of equivalence classes, namely the integers modulo 2_n_, Z/(2_n_)Z . Each class represents a set {j + k 2_n_ | k is an integer} for some integer j, 0 ≤ j ≤ 2 n − 1. There are 2_n_ such sets, and addition and multiplication are well-defined on them.</description></item></channel></rss>