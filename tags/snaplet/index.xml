<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>snaplet on Corner case</title><link>https://freizl.github.io/tags/snaplet/</link><description>Recent content in snaplet on Corner case</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Haisheng Wu</copyright><lastBuildDate>Thu, 24 May 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://freizl.github.io/tags/snaplet/index.xml" rel="self" type="application/rss+xml"/><item><title>Snaplet Request Local State</title><link>https://freizl.github.io/posts/snaplet-request-local-state/</link><pubDate>Thu, 24 May 2012 00:00:00 +0000</pubDate><guid>https://freizl.github.io/posts/snaplet-request-local-state/</guid><description>什么 Snaplet Snap 从 0.6 版本引入 Snaplet 这个设计，它使得 Web 应用什么可组合化，开发者可以设计许多独立的功能模块，或者说小的应用模块，然后通过组合以组建一个大型的应用。
详细资料请看这里1。
Request local state Request Local State 是 snaplet 的一个设计目标2。初识时并没引起什么关注，也是不太理解具体含义。最近在写 Snaplet-OAuth 的时候遇到问题，就是由于不知道这个东西的含义所造成的。
Snaplet-oauth-0.0.0 根据 Snaplet 的常规模式，定义一个 data type 用于保存相关信息，比如
data OAuthSnaplet = OAuthSnaplet { getOauth :: OAuth2 , getCodeParam :: BS.ByteString } class HasOauth b where oauthLens :: Lens b (Snaplet OAuthSnaplet) data OAuth2 = OAuth2 { oauthClientId :: BS.ByteString , oauthClientSecret :: BS.ByteString , oauthOAuthorizeEndpoint :: BS.ByteString , oauthAccessTokenEndpoint :: BS.</description></item></channel></rss>