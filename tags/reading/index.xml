<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>reading on Corner case</title><link>https://freizl.github.io/tags/reading/</link><description>Recent content in reading on Corner case</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Haisheng Wu</copyright><lastBuildDate>Wed, 12 Sep 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://freizl.github.io/tags/reading/index.xml" rel="self" type="application/rss+xml"/><item><title>Improve Space Usage</title><link>https://freizl.github.io/posts/improve-space-usage/</link><pubDate>Wed, 12 Sep 2012 00:00:00 +0000</pubDate><guid>https://freizl.github.io/posts/improve-space-usage/</guid><description>It is example from [programming in haskell] video lecture 12 by Eric M. I just like to know whether GHC profile tool could help to figure out such problem.
module Main where sumWith1 v [] = v sumWith1 v (x:xs) = sumWith1 (v+x) xs sumWith2 v [] = v sumWith2 v (x:xs) = (sumWith2 $! (v+x)) xs test = sumWith2 0 [1..20000000] main = print test</description></item></channel></rss>